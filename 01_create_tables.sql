

-- Create tables
CREATE TABLE publishers(
name        VARCHAR2(50) PRIMARY KEY NOT NULL,
address     VARCHAR2(50),
phone       CHAR(12) CHECK (REGEXP_LIKE(phone, '^\d{3}-\d{3}-\d{4}$'))
);



CREATE TABLE books(
book_id         NUMBER PRIMARY KEY NOT NULL,
title           VARCHAR2(100) NOT NULL,
publisher_name  VARCHAR2(50),

CONSTRAINT publisher_fk
FOREIGN KEY(publisher_name) REFERENCES publishers(name)
);



CREATE TABLE book_authors(
book_id         NUMBER NOT NULL,
author_name     VARCHAR2(50) NOT NULL,

CONSTRAINT author_PK
PRIMARY KEY(book_id, author_name),

CONSTRAINT author_book_id_fk
FOREIGN KEY(book_id) REFERENCES books(book_id)
);



CREATE TABLE branches(
branch_id       VARCHAR2(15) PRIMARY KEY NOT NULL,
branch_name     VARCHAR2(50) NOT NULL,
address         VARCHAR2(50)
);



CREATE TABLE book_copies(
book_id         NUMBER NOT NULL,
branch_id       VARCHAR2(15) NOT NULL,
no_of_copies    NUMBER NOT NULL CHECK (no_of_copies >= 0),

CONSTRAINT book_copies_pk
PRIMARY KEY (book_id, branch_id),

CONSTRAINT copies_book_id_fk
FOREIGN KEY(book_id) REFERENCES books(book_id),

CONSTRAINT copies_branch_fk
FOREIGN KEY(branch_id) REFERENCES branches(branch_id)
);



CREATE TABLE borrowers(
card_no         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
name            VARCHAR2(50) NOT NULL,
address         VARCHAR2(50) NOT NULL,
phone           CHAR(12) NOT NULL CHECK (REGEXP_LIKE(phone, '^\d{3}-\d{3}-\d{4}$')),
unpaid_dues     NUMBER DEFAULT 0 CHECK (unpaid_dues >= 0)
);



CREATE TABLE book_loans(
book_id         NUMBER NOT NULL,
branch_id       VARCHAR2(15) NOT NULL,
card_no         NUMBER NOT NULL,
date_out        DATE DEFAULT SYSDATE,
date_due        DATE,
date_returned   DATE,

CONSTRAINT loans_pk
PRIMARY KEY(book_id, branch_id, card_no),

CONSTRAINT loans_book_id_fk
FOREIGN KEY(book_id) REFERENCES books(book_id),

CONSTRAINT loans_branch_fk
FOREIGN KEY(branch_id) REFERENCES branches(branch_id),

CONSTRAINT card_no_fk
FOREIGN KEY(card_no) REFERENCES borrowers(card_no),

CONSTRAINT valid_return_date 
CHECK (date_returned IS NULL OR date_returned >= date_out)
);







